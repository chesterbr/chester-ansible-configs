#!/bin/bash
#
# This script sets up a development environment by:
#   - Forwarding local ports 80/433 to 8080/8043
#     (which Vagrantfile will, on its turn, forward to the VM's 80/433)
#   - Adding development site names to /etc/hosts
#
# That way, we can test, say, cruzalinhas by opening http://dev.cruzalinhas.com
#
# Run it again to remove the entries and restore port forwarding to boot-time config
#

if [ "$(id -u)" != "0" ]; then
  echo "This script must be run as root" 1>&2
  exit 1
fi

# TODO: somehow get those from nginx configurations (this list does not include
# redirects); also review non-dev-m. prefixed sites (and possibly split redirects)
DEVELOPMENT_SITES="dev.cruzalinhas.com
                   dev.totransit.chester.me"

TAB=$'\t'

add_dev_site() {
  SITE_NAME=$1
  echo "$SITE_NAME"
  echo "127.0.0.1${TAB}${SITE_NAME}" >> /etc/hosts
}

remove_dev_site() {
  SITE_NAME=$1
  sed -i.bak "/^127\.0\.0\.1${TAB}${SITE_NAME}$/d" /etc/hosts
}


STATUS=`pfctl -s nat -q | grep rdr.*8080 | wc -l`

if [ $STATUS != '0' ]; then
  pfctl -F all -f /etc/pf.conf
  echo
  echo "=== Port forwarding stopped"
  while read -r SITE; do
    remove_dev_site $SITE
  done <<< "$DEVELOPMENT_SITES"
  echo "=== Development sites removed from /etc/hosts"
else
  echo "
    rdr pass inet proto tcp from any to any port 80 -> 127.0.0.1 port 8080
    rdr pass inet proto tcp from any to any port 443 -> 127.0.0.1 port 8443
  " | pfctl -ef -
  echo
  echo "=== Port forwarding started. Forwarding these:"
  pfctl -s nat -q
  echo
  echo "=== Adding development sites to /etc/hosts:"
  while read -r SITE; do
    add_dev_site $SITE
  done <<< "$DEVELOPMENT_SITES"
fi
