---
- hosts: production
  remote_user: "{{ admin_user }}"

  handlers:
    - name: reload supervisor
      shell: "service supervisor restart; supervisorctl reload"
      become: yes

    - name: restart app
      shell: "supervisorctl restart cruzalinhas"
      become: yes

  roles:
    - role: chesterbr.vault
      tags: foo
    - role: chesterbr.nginx
      nginx_sites:
        - server:
            file_name: cruzalinhas.com
            root: "{{ cruzalinhas_checkout_dir }}/public"
            server_name: cruzalinhas.com
            location1: { name: '~ .*', proxy_pass: 'http://cruzalinhas_rails' }
        - server:
            file_name: redirects.cruzalinhas.com
            server_name: www.cruzalinhas.com www.cruzalinhas.com.br cruzalinhas.com.br
            return: 301 $scheme://cruzalinhas.com$request_uri
    - role: chesterbr.ruby
      ruby_user: "{{ admin_user }}"

  tasks:
    - name: Install prereq packages
      apt: name={{ packages }} state=present
      become: yes
      vars:
        packages:
          - git
          - libsqlite3-dev
          - xvfb
          - firefox
          - python-pip
          - default-jdk
          - nodejs
          - makepasswd
          - supervisor

    - name: Add cruzalinhas upstream to server config
      become: yes
      lineinfile: dest=/etc/nginx/sites-enabled/cruzalinhas.com insertbefore="BOF" line="upstream cruzalinhas_rails { server 127.0.0.1:3000; }"
      notify:
       - reload nginx

    - name: Ensure code repository is at latest version
      git: repo=https://github.com/chesterbr/cruzalinhas.git
           accept_hostkey=true
           dest={{ cruzalinhas_checkout_dir }}
           version=main
      notify: restart app
      tags:
        - update_app

    - name: Ensure we're always in production rails environment
      lineinfile: dest=~/.profile line="export RAILS_ENV=production" regexp="^export RAILS_ENV"

    - name: "Install ruby required by the code (e.g.: .ruby_version)"
      shell: bash -lc "cd {{ cruzalinhas_checkout_dir }}; CONFIGURE_OPTS=\"--disable-install-rdoc\" yes \\n | rbenv install"
      register: ruby_install_result
      changed_when: "'Installed' in ruby_install_result.stderr"
      failed_when: ruby_install_result.rc != 0 and not (ruby_install_result.stderr is search('^rbenv.*versions.*already exists$'))
      notify: restart app
      tags:
        - update_app

    - name: Ensure we have all gem dependencies for cruzalinhas
      command: bash -lc "cd {{ cruzalinhas_checkout_dir }}; gem install bundle; bundle install"
      register: bundler
      changed_when: '"Installing" in bundler.stdout'
      tags:
        - update_app

    - name: Configures cruzalinhas back-end to run under supervisor (from source dir)
      template: src=templates/cruzalinhas.conf.supervisor.j2 dest=/etc/supervisor/conf.d/cruzalinhas.conf
      become: yes
      notify: reload supervisor

    - name: Download and update SPTrans data
      command: bash -lc "cd {{ cruzalinhas_checkout_dir }}; DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bundle exec rake sptrans:import"
      notify: restart app
      tags:
        - update_sptrans_data

# TODO:
# config crontab with download & update sptrans
